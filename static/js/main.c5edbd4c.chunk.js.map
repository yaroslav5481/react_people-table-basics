{"version":3,"sources":["App.tsx","components/Loader/HomePage.tsx","components/Loader/Loader.tsx","api.ts","components/Loader/PersonLink.tsx","components/Loader/PeopleList.tsx","components/Loader/PeoplePage.tsx","Root.tsx","index.tsx"],"names":["getLinkClass","isActive","classNames","App","className","role","to","HomePage","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","cn","sex","slug","name","PeopleList","useState","people","setPeople","isLoading","setIsLoading","peopleMessage","setPeopleMessage","error","setError","useParams","getPersonByName","find","useEffect","length","catch","finally","map","motherName","fatherName","born","died","mother","undefined","father","PeoplePage","Root","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.c5edbd4c.chunk.js","sourcesContent":["import { NavLink, Outlet } from 'react-router-dom';\nimport './App.scss';\nimport classNames from 'classnames';\n\nconst getLinkClass = ({ isActive }: { isActive:\nboolean }) => classNames('navbar-item', {\n  'has-background-grey-lighter':\nisActive,\n});\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={getLinkClass}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={getLinkClass}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","export const HomePage = () => {\n  return (\n    <h1 className=\"title\">\n      Home Page\n    </h1>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import cn from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  return (\n    <Link\n      className={\n        cn(\n          {\n            'has-text-danger': person.sex === 'f',\n          },\n        )\n      }\n      to={`${person.slug}`}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Loader } from './Loader';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { PersonLink } from './PersonLink';\n\nexport const PeopleList = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [peopleMessage, setPeopleMessage] = useState<boolean>(false);\n  const [error, setError] = useState<boolean>(false);\n\n  const { slug } = useParams();\n\n  function getPersonByName(name: string) {\n    return people.find((person) => person.name === name);\n  }\n\n  useEffect(() => {\n    setIsLoading(true);\n    getPeople()\n      .then((response) => {\n        setPeople(response);\n\n        if (response.length === 0) {\n          setPeopleMessage(true);\n        }\n      })\n\n      .catch(() => setError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <div className=\"block\">\n      <div className=\"box table-container\">\n\n        {isLoading && <Loader />}\n\n        {error && (\n          <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n            Something went wrong\n          </p>\n        )}\n\n        {peopleMessage && (\n          <p data-cy=\"noPeopleMessage\">\n            There are no people on the server\n          </p>\n        )}\n\n        {!isLoading && (\n          <table\n            data-cy=\"peopleTable\"\n            className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n          >\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Sex</th>\n                <th>Born</th>\n                <th>Died</th>\n                <th>Mother</th>\n                <th>Father</th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {people.map(person => {\n                const {\n                  motherName,\n                  fatherName,\n                  sex,\n                  born,\n                  died,\n                } = person;\n\n                const mother = motherName ? getPersonByName(motherName)\n                  : undefined;\n                const father = fatherName ? getPersonByName(fatherName)\n                  : undefined;\n\n                return (\n                  <tr\n                    data-cy=\"person\"\n                    key={person.slug}\n                    className={\n                      cn(\n                        {\n                          'has-background-warning':\n                            slug === person.slug,\n                        },\n                      )\n                    }\n                  >\n\n                    <td>\n                      <PersonLink person={person} />\n                    </td>\n                    <td>{sex}</td>\n                    <td>{born}</td>\n                    <td>{died}</td>\n\n                    <td>\n                      {(motherName\n                    && (mother ? <PersonLink person={mother} /> : motherName))\n                    || '-'}\n                    </td>\n\n                    <td>\n                      {(fatherName\n                    && (father ? <PersonLink person={father} /> : fatherName))\n                    || '-'}\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        )}\n      </div>\n    </div>\n  );\n};\n","import { PeopleList } from './PeopleList';\n\nexport const PeoplePage = () => {\n  return (\n    <>\n      <h1 className=\"title\">\n        People Page\n      </h1>\n      <PeopleList />\n    </>\n  );\n};\n","import {\n  HashRouter as Router,\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './components/Loader/HomePage';\nimport { PeoplePage } from './components/Loader/PeoplePage';\n\nexport const Root = () => {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route index element={<HomePage />} />\n          <Route path=\"people\" element={<PeoplePage />}>\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"*\" element={<h1 className=\"title\">Page not found</h1>} />\n          <Route\n            path=\"home\"\n            element={(\n              <Navigate\n                to=\"/\"\n                replace\n              />\n            )}\n          />\n        </Route>\n      </Routes>\n    </Router>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { Root } from './Root';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Root />,\n  );\n"],"sourceRoot":""}